---
name: Test
on:
  push:
    branches:
      - "main"
  pull_request:
jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        otp: ['24.2', '25.0']
        elixir: ['1.13.4', '1.14.0']

    env:
      MIX_ENV: test

    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Check out source
        uses: actions/checkout@v3

      - name: Install Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}

      - name: Check formatting
        run: mix format --check-formatted

      - name: Retrieve cached deps
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Install tools
        run: mix do local.rebar --force, local.hex --force

      - name: Get Elixir deps
        run: mix deps.get

      - name: Compile
        run: mix compile --warnings-as-errors

      - name: Run tests
        run: mix test

      - name: Run credo
        # run: mix credo --mute-exit-status
        run: mix credo

      - name: Run deps.audit
        run: mix deps.audit

      - name: Run dialyzer
        run: mix dialyzer --halt-exit-status --format github
        # run: mix dialyzer --ignore-exit-status --format github

      - name: Publish unit test results to GitHub
        uses: EnricoMi/publish-unit-test-result-action@v2
        # Run even if tests fail
        if: always()
        with:
          junit_files: _build/test/junit-reports/*.xml
          # junit_files: _build/test/lib/*/*.xml
          check_name: "Test Results ${{matrix.elixir}} ${{matrix.otp}}"

      # - name: Upload results to Datadog
      #   if: always()
      #   continue-on-error: true
      #   env:
      #     DD_API_KEY: ${{ secrets.ACTIONS_DD_API_KEY }}
      #     DD_ENV: ci
      #   run: |
      #     npm install -g @datadog/datadog-ci
      #     datadog-ci junit upload --service api-graphql _build/test/lib/*/test-junit-report.xml
